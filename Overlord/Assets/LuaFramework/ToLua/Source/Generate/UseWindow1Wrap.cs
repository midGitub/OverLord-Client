//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UseWindow1Wrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UseWindow1), typeof(System.Object));
		L.RegFunction("PlayWindow", PlayWindow);
		L.RegFunction("New", _CreateUseWindow1);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("_winA", get__winA, set__winA);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUseWindow1(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UseWindow1 obj = new UseWindow1();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UseWindow1.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayWindow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UseWindow1.PlayWindow();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__winA(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, UseWindow1._winA);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__winA(IntPtr L)
	{
		try
		{
			FairyGUI.Window arg0 = (FairyGUI.Window)ToLua.CheckObject<FairyGUI.Window>(L, 2);
			UseWindow1._winA = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

